name: Build & Deploy Application

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'

    - name: Run Composer
      uses: php-actions/composer@v6

    # - name: PHPUnit tests
    #   uses: php-actions/phpunit@v3

  build:
    runs-on: ubuntu-latest
    needs  : test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Build Image for Docker compose
      run: |
        docker-compose build app
      working-directory: ./app

    - name: Build and start Docker Compose
      run: |
        docker-compose down && docker-compose up -d
      working-directory: ./app

    - name: Check if services are up
      run: |
        docker-compose ps
      working-directory: ./app

    - name: Stop Docker Compose
      run: |
        docker-compose down
      working-directory: ./app


  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Deploy to production
  #     uses: appleboy/ssh-action@master
  #     with:
  #       username: ${{ secrets.SSH_USERNAME }}
  #       host: ${{ secrets.SSH_HOST }}
  #       key: ${{ secrets.SSH_PRIVATE_KEY }}
  #       port: 22
  #       script: |
  #         docker pull airist/laracamp:latest
  #         docker run -d --name laracamp-app -p 8000:80 airist/laracamp:latest

  # documentation:
  #   runs-on: ubuntu-latest
  #   needs: deploy
  #   steps:
  #     - name: Checkout code code
  #       uses: appleboy/ssh-action@master
  #     - name: Create pages directory
  #       run: mkdir docs
  #     - name: Convert markdown to HTML 
  #       uses: docker://pandoc/core:2.9
  #       with:
  #         args: README.md -t html -o docs/index.html
  #     - name: Deploy Pages site
  #       uses: JamesIves/github-pages-deploy-action@4.1.4
  #       with:
  #         branch: gh-pages
  #         folder: docs